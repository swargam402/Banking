/*DROP TABLE roles IF EXISTS;*/
DROP TABLE accounts IF EXISTS;
DROP TABLE users IF EXISTS;
DROP TABLE account_histories IF EXISTS;

DROP SEQUENCE global_seq IF EXISTS;

CREATE SEQUENCE global_seq AS INTEGER START WITH 1;

CREATE TABLE users
(
  id INTEGER GENERATED BY DEFAULT AS SEQUENCE global_seq PRIMARY KEY,
  login VARCHAR(255) NOT NULL,
  password VARCHAR(255) NOT NULL,
  first_name VARCHAR(255) NOT NULL,
  last_name VARCHAR(255) NOT NULL,
  email VARCHAR(255) NOT NULL,
  registered TIMESTAMP DEFAULT now(),
  enabled BOOLEAN DEFAULT TRUE,
  role VARCHAR(20) NOT NULL
);
CREATE UNIQUE INDEX users_unique_email_idx ON USERS ( login );

CREATE TABLE account_histories
(
  id INTEGER GENERATED BY DEFAULT AS SEQUENCE global_seq PRIMARY KEY,
  from_user_id INTEGER NOT NULL,
  to_user_id INTEGER NOT NULL,
  from_account_id INTEGER NOT NULL,
  to_account_id INTEGER NOT NULL,
  commission_account_id INTEGER NOT NULL,
  operation_time TIMESTAMP,
  sender_currency VARCHAR(3) NOT NULL,
  recipient_currency VARCHAR(3) NOT NULL,
  from_account_number VARCHAR(255) NOT NULL,
  to_account_number VARCHAR(255) NOT NULL,
  comment VARCHAR(255) NOT NULL ,
  sender_amount DECIMAL(20,2) NOT NULL,
  recipient_amount DECIMAL(20,2) NOT NULL,
  commission DECIMAL(20,2) NOT NULL,
  amount_after_operation_on_sender DECIMAL(20,2) NOT NULL,
  amount_after_operation_in_recipient DECIMAL(20,2) NOT NULL
);

/*CREATE TABLE roles
(
  user_id INTEGER NOT NULL,
  role VARCHAR(255),
  CONSTRAINT user_roles_idx UNIQUE (user_id, role),
  FOREIGN KEY ( user_id ) REFERENCES USERS ( id ) ON DELETE CASCADE
);*/

CREATE TABLE accounts
(
  id INTEGER GENERATED BY DEFAULT AS SEQUENCE global_seq PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  account_number VARCHAR(255),
  currency VARCHAR(3),
  balance DECIMAL(20,2) NOT NULL,
  user_id INTEGER NOT NULL,
  enabled BOOLEAN DEFAULT TRUE,
  FOREIGN KEY ( user_id ) REFERENCES USERS ( id ) ON DELETE CASCADE
);
CREATE UNIQUE INDEX account_number_idx ON accounts(account_number);
